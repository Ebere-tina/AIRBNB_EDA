{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e606fda3-fa72-48f5-aba9-be82d5054c1c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "13a1ad53-d396-4b26-8c52-767140e28d13",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\LENOVO\\AppData\\Local\\Temp\\ipykernel_8296\\635242204.py:1: DtypeWarning: Columns (26) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  data= pd.read_csv('Credit_Score_Classification.csv')\n"
     ]
    }
   ],
   "source": [
    "data= pd.read_csv('Credit_Score_Classification.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "40d1e3bc-b49f-4f0a-9a18-8f80051f83f6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "58697c1c-8a74-4b63-9edd-43cf0195b7fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=data.copy()\n",
    "df=df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "16992330-2640-48d8-b0e7-da95255015b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_ID</th>\n",
       "      <th>Month</th>\n",
       "      <th>Name</th>\n",
       "      <th>Age</th>\n",
       "      <th>SSN</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>Annual_Income</th>\n",
       "      <th>Monthly_Inhand_Salary</th>\n",
       "      <th>Num_Bank_Accounts</th>\n",
       "      <th>...</th>\n",
       "      <th>Credit_Mix</th>\n",
       "      <th>Outstanding_Debt</th>\n",
       "      <th>Credit_Utilization_Ratio</th>\n",
       "      <th>Credit_History_Age</th>\n",
       "      <th>Payment_of_Min_Amount</th>\n",
       "      <th>Total_EMI_per_month</th>\n",
       "      <th>Amount_invested_monthly</th>\n",
       "      <th>Payment_Behaviour</th>\n",
       "      <th>Monthly_Balance</th>\n",
       "      <th>Credit_Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0x1602</td>\n",
       "      <td>CUS_0xd40</td>\n",
       "      <td>January</td>\n",
       "      <td>Aaron Maashoh</td>\n",
       "      <td>23</td>\n",
       "      <td>821-00-0265</td>\n",
       "      <td>Scientist</td>\n",
       "      <td>19114.12</td>\n",
       "      <td>1824.843333</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>_</td>\n",
       "      <td>809.98</td>\n",
       "      <td>26.822620</td>\n",
       "      <td>22 Years and 1 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>49.574949</td>\n",
       "      <td>80.41529543900253</td>\n",
       "      <td>High_spent_Small_value_payments</td>\n",
       "      <td>312.49408867943663</td>\n",
       "      <td>Good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0x1608</td>\n",
       "      <td>CUS_0xd40</td>\n",
       "      <td>July</td>\n",
       "      <td>Aaron Maashoh</td>\n",
       "      <td>23</td>\n",
       "      <td>821-00-0265</td>\n",
       "      <td>Scientist</td>\n",
       "      <td>19114.12</td>\n",
       "      <td>1824.843333</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>Good</td>\n",
       "      <td>809.98</td>\n",
       "      <td>22.537593</td>\n",
       "      <td>22 Years and 7 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>49.574949</td>\n",
       "      <td>178.3440674122349</td>\n",
       "      <td>Low_spent_Small_value_payments</td>\n",
       "      <td>244.5653167062043</td>\n",
       "      <td>Good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0x160e</td>\n",
       "      <td>CUS_0x21b1</td>\n",
       "      <td>January</td>\n",
       "      <td>Rick Rothackerj</td>\n",
       "      <td>28_</td>\n",
       "      <td>004-07-5839</td>\n",
       "      <td>_______</td>\n",
       "      <td>34847.84</td>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>Good</td>\n",
       "      <td>605.03</td>\n",
       "      <td>24.464031</td>\n",
       "      <td>26 Years and 7 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>18.816215</td>\n",
       "      <td>104.291825168246</td>\n",
       "      <td>Low_spent_Small_value_payments</td>\n",
       "      <td>470.69062692529184</td>\n",
       "      <td>Standard</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0x160f</td>\n",
       "      <td>CUS_0x21b1</td>\n",
       "      <td>February</td>\n",
       "      <td>Rick Rothackerj</td>\n",
       "      <td>28</td>\n",
       "      <td>004-07-5839</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>34847.84</td>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>Good</td>\n",
       "      <td>605.03</td>\n",
       "      <td>38.550848</td>\n",
       "      <td>26 Years and 8 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>18.816215</td>\n",
       "      <td>40.39123782853101</td>\n",
       "      <td>High_spent_Large_value_payments</td>\n",
       "      <td>484.5912142650067</td>\n",
       "      <td>Good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0x1610</td>\n",
       "      <td>CUS_0x21b1</td>\n",
       "      <td>March</td>\n",
       "      <td>Rick Rothackerj</td>\n",
       "      <td>28</td>\n",
       "      <td>004-07-5839</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>34847.84_</td>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>_</td>\n",
       "      <td>605.03</td>\n",
       "      <td>33.224951</td>\n",
       "      <td>26 Years and 9 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>18.816215</td>\n",
       "      <td>58.51597569589465</td>\n",
       "      <td>High_spent_Large_value_payments</td>\n",
       "      <td>466.46647639764313</td>\n",
       "      <td>Standard</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99994</th>\n",
       "      <td>0x25fe8</td>\n",
       "      <td>CUS_0x942c</td>\n",
       "      <td>March</td>\n",
       "      <td>Nicks</td>\n",
       "      <td>25</td>\n",
       "      <td>078-73-5990</td>\n",
       "      <td>Mechanic</td>\n",
       "      <td>39628.99</td>\n",
       "      <td>3359.415833</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>_</td>\n",
       "      <td>502.38</td>\n",
       "      <td>39.323569</td>\n",
       "      <td>31 Years and 5 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>35.104023</td>\n",
       "      <td>140.58140274528395</td>\n",
       "      <td>High_spent_Medium_value_payments</td>\n",
       "      <td>410.256158</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99995</th>\n",
       "      <td>0x25fe9</td>\n",
       "      <td>CUS_0x942c</td>\n",
       "      <td>April</td>\n",
       "      <td>Nicks</td>\n",
       "      <td>25</td>\n",
       "      <td>078-73-5990</td>\n",
       "      <td>Mechanic</td>\n",
       "      <td>39628.99</td>\n",
       "      <td>3359.415833</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>_</td>\n",
       "      <td>502.38</td>\n",
       "      <td>34.663572</td>\n",
       "      <td>31 Years and 6 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>35.104023</td>\n",
       "      <td>60.97133255718485</td>\n",
       "      <td>High_spent_Large_value_payments</td>\n",
       "      <td>479.866228</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99996</th>\n",
       "      <td>0x25fea</td>\n",
       "      <td>CUS_0x942c</td>\n",
       "      <td>May</td>\n",
       "      <td>Nicks</td>\n",
       "      <td>25</td>\n",
       "      <td>078-73-5990</td>\n",
       "      <td>Mechanic</td>\n",
       "      <td>39628.99</td>\n",
       "      <td>3359.415833</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>_</td>\n",
       "      <td>502.38</td>\n",
       "      <td>40.565631</td>\n",
       "      <td>31 Years and 7 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>35.104023</td>\n",
       "      <td>54.18595028760385</td>\n",
       "      <td>High_spent_Medium_value_payments</td>\n",
       "      <td>496.65161</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99997</th>\n",
       "      <td>0x25feb</td>\n",
       "      <td>CUS_0x942c</td>\n",
       "      <td>June</td>\n",
       "      <td>Nicks</td>\n",
       "      <td>25</td>\n",
       "      <td>078-73-5990</td>\n",
       "      <td>Mechanic</td>\n",
       "      <td>39628.99</td>\n",
       "      <td>3359.415833</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>Good</td>\n",
       "      <td>502.38</td>\n",
       "      <td>41.255522</td>\n",
       "      <td>31 Years and 8 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>35.104023</td>\n",
       "      <td>24.02847744864441</td>\n",
       "      <td>High_spent_Large_value_payments</td>\n",
       "      <td>516.809083</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99999</th>\n",
       "      <td>0x25fed</td>\n",
       "      <td>CUS_0x942c</td>\n",
       "      <td>August</td>\n",
       "      <td>Nicks</td>\n",
       "      <td>25</td>\n",
       "      <td>078-73-5990</td>\n",
       "      <td>Mechanic</td>\n",
       "      <td>39628.99_</td>\n",
       "      <td>3359.415833</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>Good</td>\n",
       "      <td>502.38</td>\n",
       "      <td>34.192463</td>\n",
       "      <td>31 Years and 10 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>35.104023</td>\n",
       "      <td>167.1638651610451</td>\n",
       "      <td>!@9#%8</td>\n",
       "      <td>393.673696</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>53049 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            ID Customer_ID     Month             Name  Age          SSN  \\\n",
       "0       0x1602   CUS_0xd40   January    Aaron Maashoh   23  821-00-0265   \n",
       "6       0x1608   CUS_0xd40      July    Aaron Maashoh   23  821-00-0265   \n",
       "8       0x160e  CUS_0x21b1   January  Rick Rothackerj  28_  004-07-5839   \n",
       "9       0x160f  CUS_0x21b1  February  Rick Rothackerj   28  004-07-5839   \n",
       "10      0x1610  CUS_0x21b1     March  Rick Rothackerj   28  004-07-5839   \n",
       "...        ...         ...       ...              ...  ...          ...   \n",
       "99994  0x25fe8  CUS_0x942c     March            Nicks   25  078-73-5990   \n",
       "99995  0x25fe9  CUS_0x942c     April            Nicks   25  078-73-5990   \n",
       "99996  0x25fea  CUS_0x942c       May            Nicks   25  078-73-5990   \n",
       "99997  0x25feb  CUS_0x942c      June            Nicks   25  078-73-5990   \n",
       "99999  0x25fed  CUS_0x942c    August            Nicks   25  078-73-5990   \n",
       "\n",
       "      Occupation Annual_Income  Monthly_Inhand_Salary  Num_Bank_Accounts  ...  \\\n",
       "0      Scientist      19114.12            1824.843333                  3  ...   \n",
       "6      Scientist      19114.12            1824.843333                  3  ...   \n",
       "8        _______      34847.84            3037.986667                  2  ...   \n",
       "9        Teacher      34847.84            3037.986667                  2  ...   \n",
       "10       Teacher     34847.84_            3037.986667                  2  ...   \n",
       "...          ...           ...                    ...                ...  ...   \n",
       "99994   Mechanic      39628.99            3359.415833                  4  ...   \n",
       "99995   Mechanic      39628.99            3359.415833                  4  ...   \n",
       "99996   Mechanic      39628.99            3359.415833                  4  ...   \n",
       "99997   Mechanic      39628.99            3359.415833                  4  ...   \n",
       "99999   Mechanic     39628.99_            3359.415833                  4  ...   \n",
       "\n",
       "       Credit_Mix  Outstanding_Debt Credit_Utilization_Ratio  \\\n",
       "0               _            809.98                26.822620   \n",
       "6            Good            809.98                22.537593   \n",
       "8            Good            605.03                24.464031   \n",
       "9            Good            605.03                38.550848   \n",
       "10              _            605.03                33.224951   \n",
       "...           ...               ...                      ...   \n",
       "99994           _            502.38                39.323569   \n",
       "99995           _            502.38                34.663572   \n",
       "99996           _            502.38                40.565631   \n",
       "99997        Good            502.38                41.255522   \n",
       "99999        Good            502.38                34.192463   \n",
       "\n",
       "           Credit_History_Age  Payment_of_Min_Amount Total_EMI_per_month  \\\n",
       "0       22 Years and 1 Months                     No           49.574949   \n",
       "6       22 Years and 7 Months                     No           49.574949   \n",
       "8       26 Years and 7 Months                     No           18.816215   \n",
       "9       26 Years and 8 Months                     No           18.816215   \n",
       "10      26 Years and 9 Months                     No           18.816215   \n",
       "...                       ...                    ...                 ...   \n",
       "99994   31 Years and 5 Months                     No           35.104023   \n",
       "99995   31 Years and 6 Months                     No           35.104023   \n",
       "99996   31 Years and 7 Months                     No           35.104023   \n",
       "99997   31 Years and 8 Months                     No           35.104023   \n",
       "99999  31 Years and 10 Months                     No           35.104023   \n",
       "\n",
       "      Amount_invested_monthly                 Payment_Behaviour  \\\n",
       "0           80.41529543900253   High_spent_Small_value_payments   \n",
       "6           178.3440674122349    Low_spent_Small_value_payments   \n",
       "8            104.291825168246    Low_spent_Small_value_payments   \n",
       "9           40.39123782853101   High_spent_Large_value_payments   \n",
       "10          58.51597569589465   High_spent_Large_value_payments   \n",
       "...                       ...                               ...   \n",
       "99994      140.58140274528395  High_spent_Medium_value_payments   \n",
       "99995       60.97133255718485   High_spent_Large_value_payments   \n",
       "99996       54.18595028760385  High_spent_Medium_value_payments   \n",
       "99997       24.02847744864441   High_spent_Large_value_payments   \n",
       "99999       167.1638651610451                            !@9#%8   \n",
       "\n",
       "          Monthly_Balance Credit_Score  \n",
       "0      312.49408867943663         Good  \n",
       "6       244.5653167062043         Good  \n",
       "8      470.69062692529184     Standard  \n",
       "9       484.5912142650067         Good  \n",
       "10     466.46647639764313     Standard  \n",
       "...                   ...          ...  \n",
       "99994          410.256158         Poor  \n",
       "99995          479.866228         Poor  \n",
       "99996           496.65161         Poor  \n",
       "99997          516.809083         Poor  \n",
       "99999          393.673696         Poor  \n",
       "\n",
       "[53049 rows x 28 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "6c559fc7-6da2-48ba-91a0-be09762ca80b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NUMERICAL\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Monthly_Inhand_Salary</th>\n",
       "      <th>Num_Bank_Accounts</th>\n",
       "      <th>Num_Credit_Card</th>\n",
       "      <th>Interest_Rate</th>\n",
       "      <th>Delay_from_due_date</th>\n",
       "      <th>Num_Credit_Inquiries</th>\n",
       "      <th>Credit_Utilization_Ratio</th>\n",
       "      <th>Total_EMI_per_month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1824.843333</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4.0</td>\n",
       "      <td>26.822620</td>\n",
       "      <td>49.574949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1824.843333</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4.0</td>\n",
       "      <td>22.537593</td>\n",
       "      <td>49.574949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>24.464031</td>\n",
       "      <td>18.816215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>38.550848</td>\n",
       "      <td>18.816215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>3037.986667</td>\n",
       "      <td>2</td>\n",
       "      <td>1385</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>33.224951</td>\n",
       "      <td>18.816215</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Monthly_Inhand_Salary  Num_Bank_Accounts  Num_Credit_Card  Interest_Rate  \\\n",
       "0             1824.843333                  3                4              3   \n",
       "6             1824.843333                  3                4              3   \n",
       "8             3037.986667                  2                4              6   \n",
       "9             3037.986667                  2                4              6   \n",
       "10            3037.986667                  2             1385              6   \n",
       "\n",
       "    Delay_from_due_date  Num_Credit_Inquiries  Credit_Utilization_Ratio  \\\n",
       "0                     3                   4.0                 26.822620   \n",
       "6                     3                   4.0                 22.537593   \n",
       "8                     3                   2.0                 24.464031   \n",
       "9                     7                   2.0                 38.550848   \n",
       "10                    3                   2.0                 33.224951   \n",
       "\n",
       "    Total_EMI_per_month  \n",
       "0             49.574949  \n",
       "6             49.574949  \n",
       "8             18.816215  \n",
       "9             18.816215  \n",
       "10            18.816215  "
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical= df.select_dtypes(include=['object', 'category'])\n",
    "numerical = df.select_dtypes(include= 'number')\n",
    "\n",
    "\n",
    "print(\"NUMERICAL\")\n",
    "numerical.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2bee8966-b15d-460b-a56b-e22fa7f3bcf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CATEGORICAL\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Customer_ID</th>\n",
       "      <th>Month</th>\n",
       "      <th>Name</th>\n",
       "      <th>Age</th>\n",
       "      <th>SSN</th>\n",
       "      <th>Occupation</th>\n",
       "      <th>Annual_Income</th>\n",
       "      <th>Num_of_Loan</th>\n",
       "      <th>Type_of_Loan</th>\n",
       "      <th>Num_of_Delayed_Payment</th>\n",
       "      <th>Changed_Credit_Limit</th>\n",
       "      <th>Credit_Mix</th>\n",
       "      <th>Outstanding_Debt</th>\n",
       "      <th>Credit_History_Age</th>\n",
       "      <th>Payment_of_Min_Amount</th>\n",
       "      <th>Amount_invested_monthly</th>\n",
       "      <th>Payment_Behaviour</th>\n",
       "      <th>Monthly_Balance</th>\n",
       "      <th>Credit_Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0x1602</td>\n",
       "      <td>CUS_0xd40</td>\n",
       "      <td>January</td>\n",
       "      <td>Aaron Maashoh</td>\n",
       "      <td>23</td>\n",
       "      <td>821-00-0265</td>\n",
       "      <td>Scientist</td>\n",
       "      <td>19114.12</td>\n",
       "      <td>4</td>\n",
       "      <td>Auto Loan, Credit-Builder Loan, Personal Loan,...</td>\n",
       "      <td>7</td>\n",
       "      <td>11.27</td>\n",
       "      <td>_</td>\n",
       "      <td>809.98</td>\n",
       "      <td>22 Years and 1 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>80.41529543900253</td>\n",
       "      <td>High_spent_Small_value_payments</td>\n",
       "      <td>312.49408867943663</td>\n",
       "      <td>Good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0x1608</td>\n",
       "      <td>CUS_0xd40</td>\n",
       "      <td>July</td>\n",
       "      <td>Aaron Maashoh</td>\n",
       "      <td>23</td>\n",
       "      <td>821-00-0265</td>\n",
       "      <td>Scientist</td>\n",
       "      <td>19114.12</td>\n",
       "      <td>4</td>\n",
       "      <td>Auto Loan, Credit-Builder Loan, Personal Loan,...</td>\n",
       "      <td>8_</td>\n",
       "      <td>11.27</td>\n",
       "      <td>Good</td>\n",
       "      <td>809.98</td>\n",
       "      <td>22 Years and 7 Months</td>\n",
       "      <td>No</td>\n",
       "      <td>178.3440674122349</td>\n",
       "      <td>Low_spent_Small_value_payments</td>\n",
       "      <td>244.5653167062043</td>\n",
       "      <td>Good</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ID Customer_ID    Month           Name Age          SSN Occupation  \\\n",
       "0  0x1602   CUS_0xd40  January  Aaron Maashoh  23  821-00-0265  Scientist   \n",
       "6  0x1608   CUS_0xd40     July  Aaron Maashoh  23  821-00-0265  Scientist   \n",
       "\n",
       "  Annual_Income Num_of_Loan  \\\n",
       "0      19114.12           4   \n",
       "6      19114.12           4   \n",
       "\n",
       "                                        Type_of_Loan Num_of_Delayed_Payment  \\\n",
       "0  Auto Loan, Credit-Builder Loan, Personal Loan,...                      7   \n",
       "6  Auto Loan, Credit-Builder Loan, Personal Loan,...                     8_   \n",
       "\n",
       "  Changed_Credit_Limit Credit_Mix Outstanding_Debt     Credit_History_Age  \\\n",
       "0                11.27          _           809.98  22 Years and 1 Months   \n",
       "6                11.27       Good           809.98  22 Years and 7 Months   \n",
       "\n",
       "  Payment_of_Min_Amount Amount_invested_monthly  \\\n",
       "0                    No       80.41529543900253   \n",
       "6                    No       178.3440674122349   \n",
       "\n",
       "                 Payment_Behaviour     Monthly_Balance Credit_Score  \n",
       "0  High_spent_Small_value_payments  312.49408867943663         Good  \n",
       "6   Low_spent_Small_value_payments   244.5653167062043         Good  "
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "print(\"CATEGORICAL\")\n",
    "categorical.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "61d8b1a7-5a91-4d25-9390-0c8949fc2fb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2.3', '7.47', '13.07', '11.07', '1.07', '13.02', '11.09', '13.83',\n",
       "       '7.22', '22.3', '4.45', '29.34', '4.4', '13.36', '18.08', '2.16',\n",
       "       '25.79', '7.14', '23.28', '23.34', '3.57', '8.92', '14.54', '4.03',\n",
       "       '15.99', '13.03', '29.51', '16.02', '17.36', '5.72', '6.75',\n",
       "       '5.54', '2.1', '13.64', '12.08', '17.72', '15.24', '2.13', '11.85',\n",
       "       '1.25', '10.28', '3.58', '13.18', '4.52', '7.52', '18.23', '9.64',\n",
       "       '3.95', '4.61', '7.289999999999999', '2.7', '2.46', '18.31',\n",
       "       '18.5', '10.06', '21.55', '11.0', '11.28', '6.63', '2.25', '7.85',\n",
       "       '2.54', '6.81', '12.52', '21.87', '5.79', '19.91', '4.03', '5.61',\n",
       "       '7.07', '1.42', '7.47', '16.96', '11.78', '3.74', '23.21', '17.56',\n",
       "       '14.93', '11.53', '10.68', '17.81', '8.27', '8.41', '17.07',\n",
       "       '23.15', '16.34', '0.94', '11.92', '9.4', '1.62', '18.39', '_',\n",
       "       '8.71', '9.19', '12.329999999999998', '4.58', '19.55', '4.02',\n",
       "       '4.62', '_', '13.02', '20.06', '-2.2', '2.29', '12.64', '9.72',\n",
       "       '17.4', '6.39', '10.62', '1.13', '15.14', '8.17', '16.29', '18.22',\n",
       "       '27.55', '-1.02', '16.88', '11.63', '10.21', '7.7', '5.8', '9.86',\n",
       "       '19.48', '9.76', '15.78', '11.5', '13.27', '1.49', '14.26',\n",
       "       '12.18', '11.95', '_', '16.89', '21.54', '4.41', '0.94', '9.78',\n",
       "       '17.8', '5.33', '22.66', '1.51', '5.01', '4.34',\n",
       "       '-1.2000000000000002', '-3.9', '_', '13.75', '1.49', '1.86',\n",
       "       '6.88', '11.68', '7.35', '8.66', '7.82', '20.28', '5.07', '20.14',\n",
       "       '13.83', '0.73', '1.8100000000000005', '9.92', '5.47', '6.66',\n",
       "       '9.58', '11.88', '2.5', '11.84', '8.03', '19.06', '19.24', '3.52',\n",
       "       '10.4', '9.39', '-3.25', '8.46', '17.76', '4.83', '14.84', '24.93',\n",
       "       '9.01', '9.24', '9.49', '4.96', '20.26', '3.82', '9.87', '13.76',\n",
       "       '21.76', '9.0', '20.68', '-1.4400000000000004', '22.64', '5.51',\n",
       "       '24.93', '8.39', '7.43', '15.22', '3.15', '10.41', '2.69'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Changed_Credit_Limit'].sample(200).values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "a395f030-110f-41fb-9116-39af4bc53ed3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Age']= df['Age'].str.replace('_', ' ')\n",
    "df['Age']= df['Age'].str.replace('-', ' ')\n",
    "df['Age']= df['Age'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "4a980c58-ec84-4520-a6af-c4c02830d4ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Annual_Income']= df['Annual_Income'].str.replace('_', ' ')\n",
    "df['Annual_Income']= df['Annual_Income'].astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e04c0117-920f-4ad1-8a50-08114de290a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Num_of_Loan']= df['Num_of_Loan'].str.replace('_', ' ')\n",
    "df['Num_of_Loan']= df['Num_of_Loan'].str.replace('-', ' ')\n",
    "df['Num_of_Loan']= df['Num_of_Loan'].astype(int) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "4cfd7bcf-3b43-45f4-a6b3-b556e8cef639",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Num_of_Delayed_Payment']= df['Num_of_Delayed_Payment'].str.replace('_', ' ')\n",
    "df['Num_of_Delayed_Payment']= df['Num_of_Delayed_Payment'].str.replace('-', ' ')\n",
    "df['Num_of_Delayed_Payment']= df['Num_of_Delayed_Payment'].astype(int) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "477be980-72e8-4341-b1e0-4575ef04a1b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Occupation']= df['Occupation'].replace('_______','tech bros')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "3ab39ca9-2d2b-47f1-95b0-b55d5b01273d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Customer_ID', 'Month', 'Name', 'Age', 'SSN', 'Occupation',\n",
       "       'Annual_Income', 'Monthly_Inhand_Salary', 'Num_Bank_Accounts',\n",
       "       'Num_Credit_Card', 'Interest_Rate', 'Num_of_Loan', 'Type_of_Loan',\n",
       "       'Delay_from_due_date', 'Num_of_Delayed_Payment', 'Changed_Credit_Limit',\n",
       "       'Num_Credit_Inquiries', 'Credit_Mix', 'Outstanding_Debt',\n",
       "       'Credit_Utilization_Ratio', 'Credit_History_Age',\n",
       "       'Payment_of_Min_Amount', 'Total_EMI_per_month',\n",
       "       'Amount_invested_monthly', 'Payment_Behaviour', 'Monthly_Balance',\n",
       "       'Credit_Score'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "2811ae4a-8485-411d-9b04-8c4086b89a64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Annual_Income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <th>Occupation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Careyq</th>\n",
       "      <th>Writer</th>\n",
       "      <td>4.392473e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Katyaf</th>\n",
       "      <th>Musician</th>\n",
       "      <td>2.797681e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chris Wickhamw</th>\n",
       "      <th>Media_Manager</th>\n",
       "      <td>2.710032e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arunaz</th>\n",
       "      <th>Writer</th>\n",
       "      <td>2.677723e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>itai</th>\n",
       "      <th>Lawyer</th>\n",
       "      <td>2.549937e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Annual_Income\n",
       "Name           Occupation                  \n",
       "Careyq         Writer          4.392473e+07\n",
       "Katyaf         Musician        2.797681e+07\n",
       "Chris Wickhamw Media_Manager   2.710032e+07\n",
       "Arunaz         Writer          2.677723e+07\n",
       "itai           Lawyer          2.549937e+07"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What is the occupation of customer name with highest annual income\n",
    "\n",
    "x= df[['Name','Occupation','Annual_Income']]\n",
    "y= x.groupby(['Name','Occupation'])[['Annual_Income']].sum().sort_values(by= 'Annual_Income', ascending=False)\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "5022ab84-e0d3-4771-a361-a93264150080",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Annual_Income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>March</th>\n",
       "      <td>1.397176e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>June</th>\n",
       "      <td>1.287831e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>January</th>\n",
       "      <td>1.262238e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>April</th>\n",
       "      <td>1.173553e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>May</th>\n",
       "      <td>1.117547e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Annual_Income\n",
       "Month                 \n",
       "March     1.397176e+09\n",
       "June      1.287831e+09\n",
       "January   1.262238e+09\n",
       "April     1.173553e+09\n",
       "May       1.117547e+09"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#What month makes the most annual income\n",
    "x= df[['Month','Annual_Income']]\n",
    "y= x.groupby(['Month'])[['Annual_Income']].sum().sort_values(by='Annual_Income', ascending= False)\n",
    "y.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "f3afbf47-b456-4a8b-81b3-8033b92bcd7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Annual_Income</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Occupation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Lawyer</th>\n",
       "      <td>7.413624e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Doctor</th>\n",
       "      <td>7.397566e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accountant</th>\n",
       "      <td>7.098010e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Entrepreneur</th>\n",
       "      <td>6.394710e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tech bros</th>\n",
       "      <td>6.316071e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Annual_Income\n",
       "Occupation                 \n",
       "Lawyer         7.413624e+08\n",
       "Doctor         7.397566e+08\n",
       "Accountant     7.098010e+08\n",
       "Entrepreneur   6.394710e+08\n",
       "tech bros      6.316071e+08"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#What occupation makes the most annual income\n",
    "x= df[['Occupation','Annual_Income']]\n",
    "y= x.groupby(['Occupation'])[['Annual_Income']].sum().sort_values(by='Annual_Income', ascending= False)\n",
    "\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "accb0bd2-d970-448a-bd4d-620d4e328562",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Num_Credit_Card</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Occupation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>tech bros</th>\n",
       "      <td>89068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Media_Manager</th>\n",
       "      <td>85880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lawyer</th>\n",
       "      <td>84674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Architect</th>\n",
       "      <td>83512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accountant</th>\n",
       "      <td>83361</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Num_Credit_Card\n",
       "Occupation                    \n",
       "tech bros                89068\n",
       "Media_Manager            85880\n",
       "Lawyer                   84674\n",
       "Architect                83512\n",
       "Accountant               83361"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#What occupation has the highest number of credit card\n",
    "x= df[['Occupation','Num_Credit_Card']]\n",
    "y= x.groupby(['Occupation'])[['Num_Credit_Card']].sum().sort_values(by='Num_Credit_Card', ascending=False)\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "d2180e59-66d9-4301-8fae-7d52a25d4190",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Changed_Credit_Limit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Occupation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Journalist</th>\n",
       "      <td>-1.24000000000000021.75999999999999985.765.765...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Entrepreneur</th>\n",
       "      <td>1.991.991.99-2.01-1.011.995.544.540.5411.545.5...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mechanic</th>\n",
       "      <td>10.277.2727.9426.9426.9426.943.93.97.93.93.911...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scientist</th>\n",
       "      <td>11.2711.276.286.2810.286.286.286.286.836.836.8...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accountant</th>\n",
       "      <td>14.9712.978.978.974.97000000000000158.9721.732...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           Changed_Credit_Limit\n",
       "Occupation                                                     \n",
       "Journalist    -1.24000000000000021.75999999999999985.765.765...\n",
       "Entrepreneur  1.991.991.99-2.01-1.011.995.544.540.5411.545.5...\n",
       "Mechanic      10.277.2727.9426.9426.9426.943.93.97.93.93.911...\n",
       "Scientist     11.2711.276.286.2810.286.286.286.286.836.836.8...\n",
       "Accountant    14.9712.978.978.974.97000000000000158.9721.732..."
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #What occupation has the least changed credit limit\n",
    "x= df[['Occupation','Changed_Credit_Limit']]\n",
    "y= x.groupby(['Occupation'])[['Changed_Credit_Limit']].sum().sort_values(by='Changed_Credit_Limit', ascending=True)\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "a735c933-7715-4dc0-9be0-8718ca302802",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Outstanding_Debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Occupation</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Scientist</th>\n",
       "      <td>809.98809.98818.22818.22818.22818.22818.22818....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Entrepreneur</th>\n",
       "      <td>632.46632.46632.46632.46632.46632.46179.22179....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Teacher</th>\n",
       "      <td>605.03605.03605.03605.03605.031328.931328.9313...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tech bros</th>\n",
       "      <td>605.031303.011303.01632.461704.182430.211672.4...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Journalist</th>\n",
       "      <td>421.43421.43421.43421.43421.431936.791936.7919...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Outstanding_Debt\n",
       "Occupation                                                     \n",
       "Scientist     809.98809.98818.22818.22818.22818.22818.22818....\n",
       "Entrepreneur  632.46632.46632.46632.46632.46632.46179.22179....\n",
       "Teacher       605.03605.03605.03605.03605.031328.931328.9313...\n",
       "tech bros     605.031303.011303.01632.461704.182430.211672.4...\n",
       "Journalist    421.43421.43421.43421.43421.431936.791936.7919..."
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#What occupation has the most outstanding debt\n",
    "x= df[['Occupation','Outstanding_Debt']]\n",
    "y=x.groupby(['Occupation'])[['Outstanding_Debt']].sum().sort_values(by='Outstanding_Debt', ascending= False)\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "29b02b9f-d8c3-46a9-8711-1f5a487b89a4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
